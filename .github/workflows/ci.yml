name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-action:
    strategy:
      matrix:
        # Right now macos-13 is amd64 while macos-14 is aarch64 (M1)
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
        pkl_version: [0.26.0, 0.26.1, 0.26.2, 0.26.3]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          pkl-version: ${{ matrix.pkl_version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Confirm download
        uses: mathiasvr/command-output@v2.0.0
        id: check-exec
        with:
          run: pkl --version

      - name: Verify stdout
        uses: actions/github-script@v7
        env:
          RESULT: ${{ steps.check-exec.outputs.stdout }}
          PKL_VERSION: ${{ matrix.pkl_version }}
        with:
          script: |
            const output = process.env.RESULT;
            const pklVersion = process.env.PKL_VERSION;
            const expectedStart = `Pkl ${pklVersion}`
            console.log(`Output from executing pkl was: ${output}`)
            if (output.startsWith(expectedStart)) {
              console.log('Output starts with expected string:', expectedStart);
            } else {
              throw new Error('Output does not start with expected string:', expectedStart);
            }
